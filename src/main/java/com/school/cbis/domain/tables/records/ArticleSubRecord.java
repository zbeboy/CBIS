/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables.records;


import com.school.cbis.domain.tables.ArticleSub;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleSubRecord extends UpdatableRecordImpl<ArticleSubRecord> implements Record4<Integer, String, String, Integer> {

	private static final long serialVersionUID = -587335865;

	/**
	 * Setter for <code>cbis.article_sub.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cbis.article_sub.id</code>.
	 */
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>cbis.article_sub.sub_title</code>.
	 */
	public void setSubTitle(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cbis.article_sub.sub_title</code>.
	 */
	@Size(max = 50)
	public String getSubTitle() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>cbis.article_sub.sub_content</code>.
	 */
	public void setSubContent(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cbis.article_sub.sub_content</code>.
	 */
	@Size(max = 1000)
	public String getSubContent() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>cbis.article_sub.article_info_id</code>.
	 */
	public void setArticleInfoId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cbis.article_sub.article_info_id</code>.
	 */
	@NotNull
	public Integer getArticleInfoId() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return ArticleSub.ARTICLE_SUB.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ArticleSub.ARTICLE_SUB.SUB_TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return ArticleSub.ARTICLE_SUB.SUB_CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return ArticleSub.ARTICLE_SUB.ARTICLE_INFO_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getSubTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getSubContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getArticleInfoId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleSubRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleSubRecord value2(String value) {
		setSubTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleSubRecord value3(String value) {
		setSubContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleSubRecord value4(Integer value) {
		setArticleInfoId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleSubRecord values(Integer value1, String value2, String value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ArticleSubRecord
	 */
	public ArticleSubRecord() {
		super(ArticleSub.ARTICLE_SUB);
	}

	/**
	 * Create a detached, initialised ArticleSubRecord
	 */
	public ArticleSubRecord(Integer id, String subTitle, String subContent, Integer articleInfoId) {
		super(ArticleSub.ARTICLE_SUB);

		setValue(0, id);
		setValue(1, subTitle);
		setValue(2, subContent);
		setValue(3, articleInfoId);
	}
}
