/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.TeachingMaterialTemplateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeachingMaterialTemplate extends TableImpl<TeachingMaterialTemplateRecord> {

	private static final long serialVersionUID = -940786457;

	/**
	 * The reference instance of <code>cbis.teaching_material_template</code>
	 */
	public static final TeachingMaterialTemplate TEACHING_MATERIAL_TEMPLATE = new TeachingMaterialTemplate();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TeachingMaterialTemplateRecord> getRecordType() {
		return TeachingMaterialTemplateRecord.class;
	}

	/**
	 * The column <code>cbis.teaching_material_template.id</code>.
	 */
	public final TableField<TeachingMaterialTemplateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.teaching_material_template.title</code>.
	 */
	public final TableField<TeachingMaterialTemplateRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>cbis.teaching_material_template.create_time</code>.
	 */
	public final TableField<TeachingMaterialTemplateRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cbis.teaching_material_template.create_user</code>.
	 */
	public final TableField<TeachingMaterialTemplateRecord, String> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

	/**
	 * The column <code>cbis.teaching_material_template.tie_id</code>.
	 */
	public final TableField<TeachingMaterialTemplateRecord, Integer> TIE_ID = createField("tie_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.teaching_material_template.teach_task_info_id</code>.
	 */
	public final TableField<TeachingMaterialTemplateRecord, Integer> TEACH_TASK_INFO_ID = createField("teach_task_info_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>cbis.teaching_material_template</code> table reference
	 */
	public TeachingMaterialTemplate() {
		this("teaching_material_template", null);
	}

	/**
	 * Create an aliased <code>cbis.teaching_material_template</code> table reference
	 */
	public TeachingMaterialTemplate(String alias) {
		this(alias, TEACHING_MATERIAL_TEMPLATE);
	}

	private TeachingMaterialTemplate(String alias, Table<TeachingMaterialTemplateRecord> aliased) {
		this(alias, aliased, null);
	}

	private TeachingMaterialTemplate(String alias, Table<TeachingMaterialTemplateRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TeachingMaterialTemplateRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TEACHING_MATERIAL_TEMPLATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TeachingMaterialTemplateRecord> getPrimaryKey() {
		return Keys.KEY_TEACHING_MATERIAL_TEMPLATE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TeachingMaterialTemplateRecord>> getKeys() {
		return Arrays.<UniqueKey<TeachingMaterialTemplateRecord>>asList(Keys.KEY_TEACHING_MATERIAL_TEMPLATE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TeachingMaterialTemplateRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TeachingMaterialTemplateRecord, ?>>asList(Keys.TEACHING_MATERIAL_TEMPLATE_IBFK_1, Keys.TEACHING_MATERIAL_TEMPLATE_IBFK_2, Keys.TEACHING_MATERIAL_TEMPLATE_IBFK_3);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeachingMaterialTemplate as(String alias) {
		return new TeachingMaterialTemplate(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TeachingMaterialTemplate rename(String name) {
		return new TeachingMaterialTemplate(name, null);
	}
}
