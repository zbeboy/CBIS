/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.ArticleInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleInfo extends TableImpl<ArticleInfoRecord> {

	private static final long serialVersionUID = 1305993719;

	/**
	 * The reference instance of <code>cbis.article_info</code>
	 */
	public static final ArticleInfo ARTICLE_INFO = new ArticleInfo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ArticleInfoRecord> getRecordType() {
		return ArticleInfoRecord.class;
	}

	/**
	 * The column <code>cbis.article_info.id</code>.
	 */
	public final TableField<ArticleInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.article_info.big_title</code>.
	 */
	public final TableField<ArticleInfoRecord, String> BIG_TITLE = createField("big_title", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>cbis.article_info.article_writer</code>.
	 */
	public final TableField<ArticleInfoRecord, String> ARTICLE_WRITER = createField("article_writer", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

	/**
	 * The column <code>cbis.article_info.date</code>.
	 */
	public final TableField<ArticleInfoRecord, Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cbis.article_info.article_type_id</code>.
	 */
	public final TableField<ArticleInfoRecord, Integer> ARTICLE_TYPE_ID = createField("article_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.article_info.article_content</code>.
	 */
	public final TableField<ArticleInfoRecord, String> ARTICLE_CONTENT = createField("article_content", org.jooq.impl.SQLDataType.VARCHAR.length(2000), this, "");

	/**
	 * The column <code>cbis.article_info.article_photo_url</code>.
	 */
	public final TableField<ArticleInfoRecord, String> ARTICLE_PHOTO_URL = createField("article_photo_url", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

	/**
	 * Create a <code>cbis.article_info</code> table reference
	 */
	public ArticleInfo() {
		this("article_info", null);
	}

	/**
	 * Create an aliased <code>cbis.article_info</code> table reference
	 */
	public ArticleInfo(String alias) {
		this(alias, ARTICLE_INFO);
	}

	private ArticleInfo(String alias, Table<ArticleInfoRecord> aliased) {
		this(alias, aliased, null);
	}

	private ArticleInfo(String alias, Table<ArticleInfoRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ArticleInfoRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ARTICLE_INFO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ArticleInfoRecord> getPrimaryKey() {
		return Keys.KEY_ARTICLE_INFO_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ArticleInfoRecord>> getKeys() {
		return Arrays.<UniqueKey<ArticleInfoRecord>>asList(Keys.KEY_ARTICLE_INFO_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ArticleInfoRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ArticleInfoRecord, ?>>asList(Keys.ARTICLE_INFO_IBFK_1, Keys.ARTICLE_INFO_IBFK_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleInfo as(String alias) {
		return new ArticleInfo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ArticleInfo rename(String name) {
		return new ArticleInfo(name, null);
	}
}
