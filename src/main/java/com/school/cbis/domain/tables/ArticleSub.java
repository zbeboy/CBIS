/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.ArticleSubRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleSub extends TableImpl<ArticleSubRecord> {

	private static final long serialVersionUID = -1092062780;

	/**
	 * The reference instance of <code>cbis.article_sub</code>
	 */
	public static final ArticleSub ARTICLE_SUB = new ArticleSub();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ArticleSubRecord> getRecordType() {
		return ArticleSubRecord.class;
	}

	/**
	 * The column <code>cbis.article_sub.id</code>.
	 */
	public final TableField<ArticleSubRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.article_sub.sub_title</code>.
	 */
	public final TableField<ArticleSubRecord, String> SUB_TITLE = createField("sub_title", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>cbis.article_sub.sub_content</code>.
	 */
	public final TableField<ArticleSubRecord, String> SUB_CONTENT = createField("sub_content", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

	/**
	 * The column <code>cbis.article_sub.article_info_id</code>.
	 */
	public final TableField<ArticleSubRecord, Integer> ARTICLE_INFO_ID = createField("article_info_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>cbis.article_sub</code> table reference
	 */
	public ArticleSub() {
		this("article_sub", null);
	}

	/**
	 * Create an aliased <code>cbis.article_sub</code> table reference
	 */
	public ArticleSub(String alias) {
		this(alias, ARTICLE_SUB);
	}

	private ArticleSub(String alias, Table<ArticleSubRecord> aliased) {
		this(alias, aliased, null);
	}

	private ArticleSub(String alias, Table<ArticleSubRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ArticleSubRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ARTICLE_SUB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ArticleSubRecord> getPrimaryKey() {
		return Keys.KEY_ARTICLE_SUB_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ArticleSubRecord>> getKeys() {
		return Arrays.<UniqueKey<ArticleSubRecord>>asList(Keys.KEY_ARTICLE_SUB_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ArticleSubRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ArticleSubRecord, ?>>asList(Keys.ARTICLE_SUB_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleSub as(String alias) {
		return new ArticleSub(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ArticleSub rename(String name) {
		return new ArticleSub(name, null);
	}
}
