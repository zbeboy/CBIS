/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables.records;


import com.school.cbis.domain.tables.Student;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentRecord extends UpdatableRecordImpl<StudentRecord> implements Record8<Integer, String, Integer, String, String, String, String, String> {

	private static final long serialVersionUID = 1017923680;

	/**
	 * Setter for <code>cbis.student.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cbis.student.id</code>.
	 */
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>cbis.student.student_number</code>.
	 */
	public void setStudentNumber(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cbis.student.student_number</code>.
	 */
	@NotNull
	@Size(max = 25)
	public String getStudentNumber() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>cbis.student.grade_id</code>.
	 */
	public void setGradeId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cbis.student.grade_id</code>.
	 */
	@NotNull
	public Integer getGradeId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>cbis.student.dormitory_number</code>. 宿舍号
	 */
	public void setDormitoryNumber(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cbis.student.dormitory_number</code>. 宿舍号
	 */
	@Size(max = 50)
	public String getDormitoryNumber() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>cbis.student.parent_name</code>. 家长姓名
	 */
	public void setParentName(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cbis.student.parent_name</code>. 家长姓名
	 */
	@Size(max = 10)
	public String getParentName() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>cbis.student.parent_contact_phone</code>. 家长联系电话
	 */
	public void setParentContactPhone(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cbis.student.parent_contact_phone</code>. 家长联系电话
	 */
	@Size(max = 15)
	public String getParentContactPhone() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>cbis.student.place_origin</code>. 生源地
	 */
	public void setPlaceOrigin(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cbis.student.place_origin</code>. 生源地
	 */
	@Size(max = 500)
	public String getPlaceOrigin() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>cbis.student.problem_situation</code>. 问题情况
	 */
	public void setProblemSituation(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cbis.student.problem_situation</code>. 问题情况
	 */
	@Size(max = 500)
	public String getProblemSituation() {
		return (String) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, Integer, String, String, String, String, String> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, Integer, String, String, String, String, String> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Student.STUDENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Student.STUDENT.STUDENT_NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Student.STUDENT.GRADE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Student.STUDENT.DORMITORY_NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Student.STUDENT.PARENT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Student.STUDENT.PARENT_CONTACT_PHONE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Student.STUDENT.PLACE_ORIGIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Student.STUDENT.PROBLEM_SITUATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getStudentNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getGradeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDormitoryNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getParentName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getParentContactPhone();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getPlaceOrigin();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getProblemSituation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord value2(String value) {
		setStudentNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord value3(Integer value) {
		setGradeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord value4(String value) {
		setDormitoryNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord value5(String value) {
		setParentName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord value6(String value) {
		setParentContactPhone(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord value7(String value) {
		setPlaceOrigin(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord value8(String value) {
		setProblemSituation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StudentRecord values(Integer value1, String value2, Integer value3, String value4, String value5, String value6, String value7, String value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StudentRecord
	 */
	public StudentRecord() {
		super(Student.STUDENT);
	}

	/**
	 * Create a detached, initialised StudentRecord
	 */
	public StudentRecord(Integer id, String studentNumber, Integer gradeId, String dormitoryNumber, String parentName, String parentContactPhone, String placeOrigin, String problemSituation) {
		super(Student.STUDENT);

		setValue(0, id);
		setValue(1, studentNumber);
		setValue(2, gradeId);
		setValue(3, dormitoryNumber);
		setValue(4, parentName);
		setValue(5, parentContactPhone);
		setValue(6, placeOrigin);
		setValue(7, problemSituation);
	}
}
