/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.ArticleTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleType extends TableImpl<ArticleTypeRecord> {

	private static final long serialVersionUID = -430466526;

	/**
	 * The reference instance of <code>cbis.article_type</code>
	 */
	public static final ArticleType ARTICLE_TYPE = new ArticleType();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ArticleTypeRecord> getRecordType() {
		return ArticleTypeRecord.class;
	}

	/**
	 * The column <code>cbis.article_type.id</code>.
	 */
	public final TableField<ArticleTypeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.article_type.name</code>.
	 */
	public final TableField<ArticleTypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * Create a <code>cbis.article_type</code> table reference
	 */
	public ArticleType() {
		this("article_type", null);
	}

	/**
	 * Create an aliased <code>cbis.article_type</code> table reference
	 */
	public ArticleType(String alias) {
		this(alias, ARTICLE_TYPE);
	}

	private ArticleType(String alias, Table<ArticleTypeRecord> aliased) {
		this(alias, aliased, null);
	}

	private ArticleType(String alias, Table<ArticleTypeRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ArticleTypeRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ARTICLE_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ArticleTypeRecord> getPrimaryKey() {
		return Keys.KEY_ARTICLE_TYPE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ArticleTypeRecord>> getKeys() {
		return Arrays.<UniqueKey<ArticleTypeRecord>>asList(Keys.KEY_ARTICLE_TYPE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleType as(String alias) {
		return new ArticleType(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ArticleType rename(String name) {
		return new ArticleType(name, null);
	}
}
