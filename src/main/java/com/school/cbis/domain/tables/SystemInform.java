/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.SystemInformRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemInform extends TableImpl<SystemInformRecord> {

	private static final long serialVersionUID = -975558487;

	/**
	 * The reference instance of <code>cbis.system_inform</code>
	 */
	public static final SystemInform SYSTEM_INFORM = new SystemInform();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SystemInformRecord> getRecordType() {
		return SystemInformRecord.class;
	}

	/**
	 * The column <code>cbis.system_inform.id</code>.
	 */
	public final TableField<SystemInformRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.system_inform.system_inform</code>.
	 */
	public final TableField<SystemInformRecord, String> SYSTEM_INFORM_ = createField("system_inform", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

	/**
	 * The column <code>cbis.system_inform.system_inform_show</code>.
	 */
	public final TableField<SystemInformRecord, Integer> SYSTEM_INFORM_SHOW = createField("system_inform_show", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>cbis.system_inform</code> table reference
	 */
	public SystemInform() {
		this("system_inform", null);
	}

	/**
	 * Create an aliased <code>cbis.system_inform</code> table reference
	 */
	public SystemInform(String alias) {
		this(alias, SYSTEM_INFORM);
	}

	private SystemInform(String alias, Table<SystemInformRecord> aliased) {
		this(alias, aliased, null);
	}

	private SystemInform(String alias, Table<SystemInformRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SystemInformRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SYSTEM_INFORM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SystemInformRecord> getPrimaryKey() {
		return Keys.KEY_SYSTEM_INFORM_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SystemInformRecord>> getKeys() {
		return Arrays.<UniqueKey<SystemInformRecord>>asList(Keys.KEY_SYSTEM_INFORM_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SystemInform as(String alias) {
		return new SystemInform(alias, this);
	}

	/**
	 * Rename this table
	 */
	public SystemInform rename(String name) {
		return new SystemInform(name, null);
	}
}
