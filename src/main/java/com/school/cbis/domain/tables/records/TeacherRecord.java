/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables.records;


import com.school.cbis.domain.tables.Teacher;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeacherRecord extends UpdatableRecordImpl<TeacherRecord> implements Record3<Integer, Integer, String> {

	private static final long serialVersionUID = 1079556282;

	/**
	 * Setter for <code>cbis.teacher.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cbis.teacher.id</code>.
	 */
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>cbis.teacher.tie_id</code>.
	 */
	public void setTieId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cbis.teacher.tie_id</code>.
	 */
	@NotNull
	public Integer getTieId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>cbis.teacher.teacher_job_number</code>.
	 */
	public void setTeacherJobNumber(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cbis.teacher.teacher_job_number</code>.
	 */
	@NotNull
	@Size(max = 25)
	public String getTeacherJobNumber() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Teacher.TEACHER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Teacher.TEACHER.TIE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Teacher.TEACHER.TEACHER_JOB_NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTieId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTeacherJobNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeacherRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeacherRecord value2(Integer value) {
		setTieId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeacherRecord value3(String value) {
		setTeacherJobNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TeacherRecord values(Integer value1, Integer value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TeacherRecord
	 */
	public TeacherRecord() {
		super(Teacher.TEACHER);
	}

	/**
	 * Create a detached, initialised TeacherRecord
	 */
	public TeacherRecord(Integer id, Integer tieId, String teacherJobNumber) {
		super(Teacher.TEACHER);

		setValue(0, id);
		setValue(1, tieId);
		setValue(2, teacherJobNumber);
	}
}
