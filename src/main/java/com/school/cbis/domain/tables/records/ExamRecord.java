/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables.records;


import com.school.cbis.domain.tables.Exam;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExamRecord extends UpdatableRecordImpl<ExamRecord> implements Record9<Integer, Timestamp, String, String, String, Integer, Integer, String, Timestamp> {

	private static final long serialVersionUID = 1756716738;

	/**
	 * Setter for <code>cbis.exam.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cbis.exam.id</code>.
	 */
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>cbis.exam.exam_time</code>. 考试时间
	 */
	public void setExamTime(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cbis.exam.exam_time</code>. 考试时间
	 */
	@NotNull
	public Timestamp getExamTime() {
		return (Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>cbis.exam.exam_address</code>. 考试地点
	 */
	public void setExamAddress(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cbis.exam.exam_address</code>. 考试地点
	 */
	@Size(max = 500)
	public String getExamAddress() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>cbis.exam.exam_content</code>. 考试内容
	 */
	public void setExamContent(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cbis.exam.exam_content</code>. 考试内容
	 */
	@Size(max = 65535)
	public String getExamContent() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>cbis.exam.exam_title</code>. 考试标题
	 */
	public void setExamTitle(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cbis.exam.exam_title</code>. 考试标题
	 */
	@Size(max = 100)
	public String getExamTitle() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>cbis.exam.major_id</code>.
	 */
	public void setMajorId(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cbis.exam.major_id</code>.
	 */
	@NotNull
	public Integer getMajorId() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>cbis.exam.tie_id</code>.
	 */
	public void setTieId(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cbis.exam.tie_id</code>.
	 */
	@NotNull
	public Integer getTieId() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>cbis.exam.username</code>.
	 */
	public void setUsername(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cbis.exam.username</code>.
	 */
	@NotNull
	@Size(max = 64)
	public String getUsername() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>cbis.exam.create_time</code>.
	 */
	public void setCreateTime(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cbis.exam.create_time</code>.
	 */
	@NotNull
	public Timestamp getCreateTime() {
		return (Timestamp) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Timestamp, String, String, String, Integer, Integer, String, Timestamp> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Timestamp, String, String, String, Integer, Integer, String, Timestamp> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Exam.EXAM.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return Exam.EXAM.EXAM_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Exam.EXAM.EXAM_ADDRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Exam.EXAM.EXAM_CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Exam.EXAM.EXAM_TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Exam.EXAM.MAJOR_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Exam.EXAM.TIE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Exam.EXAM.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return Exam.EXAM.CREATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getExamTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getExamAddress();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getExamContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getExamTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getMajorId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getTieId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getCreateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value2(Timestamp value) {
		setExamTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value3(String value) {
		setExamAddress(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value4(String value) {
		setExamContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value5(String value) {
		setExamTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value6(Integer value) {
		setMajorId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value7(Integer value) {
		setTieId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value8(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord value9(Timestamp value) {
		setCreateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamRecord values(Integer value1, Timestamp value2, String value3, String value4, String value5, Integer value6, Integer value7, String value8, Timestamp value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExamRecord
	 */
	public ExamRecord() {
		super(Exam.EXAM);
	}

	/**
	 * Create a detached, initialised ExamRecord
	 */
	public ExamRecord(Integer id, Timestamp examTime, String examAddress, String examContent, String examTitle, Integer majorId, Integer tieId, String username, Timestamp createTime) {
		super(Exam.EXAM);

		setValue(0, id);
		setValue(1, examTime);
		setValue(2, examAddress);
		setValue(3, examContent);
		setValue(4, examTitle);
		setValue(5, majorId);
		setValue(6, tieId);
		setValue(7, username);
		setValue(8, createTime);
	}
}
