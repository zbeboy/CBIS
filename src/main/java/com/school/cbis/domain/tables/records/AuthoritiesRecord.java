/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables.records;


import com.school.cbis.domain.tables.Authorities;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthoritiesRecord extends TableRecordImpl<AuthoritiesRecord> implements Record2<String, String> {

	private static final long serialVersionUID = -447932041;

	/**
	 * Setter for <code>cbis.authorities.username</code>.
	 */
	public void setUsername(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cbis.authorities.username</code>.
	 */
	@NotNull
	@Size(max = 64)
	public String getUsername() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>cbis.authorities.authority</code>.
	 */
	public void setAuthority(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cbis.authorities.authority</code>.
	 */
	@NotNull
	@Size(max = 50)
	public String getAuthority() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Authorities.AUTHORITIES.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Authorities.AUTHORITIES.AUTHORITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getAuthority();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthoritiesRecord value1(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthoritiesRecord value2(String value) {
		setAuthority(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthoritiesRecord values(String value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AuthoritiesRecord
	 */
	public AuthoritiesRecord() {
		super(Authorities.AUTHORITIES);
	}

	/**
	 * Create a detached, initialised AuthoritiesRecord
	 */
	public AuthoritiesRecord(String username, String authority) {
		super(Authorities.AUTHORITIES);

		setValue(0, username);
		setValue(1, authority);
	}
}
