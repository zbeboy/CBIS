/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.TieElegantRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TieElegant extends TableImpl<TieElegantRecord> {

	private static final long serialVersionUID = -1064228443;

	/**
	 * The reference instance of <code>cbis.tie_elegant</code>
	 */
	public static final TieElegant TIE_ELEGANT = new TieElegant();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TieElegantRecord> getRecordType() {
		return TieElegantRecord.class;
	}

	/**
	 * The column <code>cbis.tie_elegant.id</code>.
	 */
	public final TableField<TieElegantRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.tie_elegant.tie_id</code>.
	 */
	public final TableField<TieElegantRecord, Integer> TIE_ID = createField("tie_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.tie_elegant.tie_elegant_article_info_id</code>.
	 */
	public final TableField<TieElegantRecord, Integer> TIE_ELEGANT_ARTICLE_INFO_ID = createField("tie_elegant_article_info_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>cbis.tie_elegant.tie_elegant_time_id</code>.
	 */
	public final TableField<TieElegantRecord, Integer> TIE_ELEGANT_TIME_ID = createField("tie_elegant_time_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.tie_elegant.is_show</code>.
	 */
	public final TableField<TieElegantRecord, Byte> IS_SHOW = createField("is_show", org.jooq.impl.SQLDataType.TINYINT.defaulted(true), this, "");

	/**
	 * Create a <code>cbis.tie_elegant</code> table reference
	 */
	public TieElegant() {
		this("tie_elegant", null);
	}

	/**
	 * Create an aliased <code>cbis.tie_elegant</code> table reference
	 */
	public TieElegant(String alias) {
		this(alias, TIE_ELEGANT);
	}

	private TieElegant(String alias, Table<TieElegantRecord> aliased) {
		this(alias, aliased, null);
	}

	private TieElegant(String alias, Table<TieElegantRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TieElegantRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TIE_ELEGANT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TieElegantRecord> getPrimaryKey() {
		return Keys.KEY_TIE_ELEGANT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TieElegantRecord>> getKeys() {
		return Arrays.<UniqueKey<TieElegantRecord>>asList(Keys.KEY_TIE_ELEGANT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TieElegantRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TieElegantRecord, ?>>asList(Keys.TIE_ELEGANT_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TieElegant as(String alias) {
		return new TieElegant(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TieElegant rename(String name) {
		return new TieElegant(name, null);
	}
}
