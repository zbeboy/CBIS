/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.ExaminationArrangementInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExaminationArrangementInfo extends TableImpl<ExaminationArrangementInfoRecord> {

	private static final long serialVersionUID = 54428;

	/**
	 * The reference instance of <code>cbis.examination_arrangement_info</code>
	 */
	public static final ExaminationArrangementInfo EXAMINATION_ARRANGEMENT_INFO = new ExaminationArrangementInfo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExaminationArrangementInfoRecord> getRecordType() {
		return ExaminationArrangementInfoRecord.class;
	}

	/**
	 * The column <code>cbis.examination_arrangement_info.id</code>.
	 */
	public final TableField<ExaminationArrangementInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_info.title</code>.
	 */
	public final TableField<ExaminationArrangementInfoRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_info.create_time</code>.
	 */
	public final TableField<ExaminationArrangementInfoRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_info.examination_arrangement_template_id</code>.
	 */
	public final TableField<ExaminationArrangementInfoRecord, Integer> EXAMINATION_ARRANGEMENT_TEMPLATE_ID = createField("examination_arrangement_template_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_info.start_time</code>.
	 */
	public final TableField<ExaminationArrangementInfoRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_info.end_time</code>.
	 */
	public final TableField<ExaminationArrangementInfoRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_info.users_id</code>.
	 */
	public final TableField<ExaminationArrangementInfoRecord, String> USERS_ID = createField("users_id", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_info.tie_id</code>.
	 */
	public final TableField<ExaminationArrangementInfoRecord, Integer> TIE_ID = createField("tie_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>cbis.examination_arrangement_info</code> table reference
	 */
	public ExaminationArrangementInfo() {
		this("examination_arrangement_info", null);
	}

	/**
	 * Create an aliased <code>cbis.examination_arrangement_info</code> table reference
	 */
	public ExaminationArrangementInfo(String alias) {
		this(alias, EXAMINATION_ARRANGEMENT_INFO);
	}

	private ExaminationArrangementInfo(String alias, Table<ExaminationArrangementInfoRecord> aliased) {
		this(alias, aliased, null);
	}

	private ExaminationArrangementInfo(String alias, Table<ExaminationArrangementInfoRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ExaminationArrangementInfoRecord, Integer> getIdentity() {
		return Keys.IDENTITY_EXAMINATION_ARRANGEMENT_INFO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ExaminationArrangementInfoRecord> getPrimaryKey() {
		return Keys.KEY_EXAMINATION_ARRANGEMENT_INFO_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ExaminationArrangementInfoRecord>> getKeys() {
		return Arrays.<UniqueKey<ExaminationArrangementInfoRecord>>asList(Keys.KEY_EXAMINATION_ARRANGEMENT_INFO_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ExaminationArrangementInfoRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ExaminationArrangementInfoRecord, ?>>asList(Keys.EXAMINATION_ARRANGEMENT_INFO_IBFK_1, Keys.EXAMINATION_ARRANGEMENT_INFO_IBFK_2, Keys.EXAMINATION_ARRANGEMENT_INFO_IBFK_3);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExaminationArrangementInfo as(String alias) {
		return new ExaminationArrangementInfo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ExaminationArrangementInfo rename(String name) {
		return new ExaminationArrangementInfo(name, null);
	}
}
