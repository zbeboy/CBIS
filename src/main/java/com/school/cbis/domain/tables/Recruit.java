/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.RecruitRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Recruit extends TableImpl<RecruitRecord> {

	private static final long serialVersionUID = 799360456;

	/**
	 * The reference instance of <code>cbis.recruit</code>
	 */
	public static final Recruit RECRUIT = new Recruit();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RecruitRecord> getRecordType() {
		return RecruitRecord.class;
	}

	/**
	 * The column <code>cbis.recruit.id</code>.
	 */
	public final TableField<RecruitRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.recruit.recruit_time</code>. 招聘时间
	 */
	public final TableField<RecruitRecord, Timestamp> RECRUIT_TIME = createField("recruit_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "招聘时间");

	/**
	 * The column <code>cbis.recruit.recruit_address</code>. 招聘地点
	 */
	public final TableField<RecruitRecord, String> RECRUIT_ADDRESS = createField("recruit_address", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "招聘地点");

	/**
	 * The column <code>cbis.recruit.recruit_content</code>. 招聘内容
	 */
	public final TableField<RecruitRecord, String> RECRUIT_CONTENT = createField("recruit_content", org.jooq.impl.SQLDataType.CLOB, this, "招聘内容");

	/**
	 * The column <code>cbis.recruit.text_link</code>. 原文链接
	 */
	public final TableField<RecruitRecord, String> TEXT_LINK = createField("text_link", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "原文链接");

	/**
	 * The column <code>cbis.recruit.recruit_title</code>. 招聘标题
	 */
	public final TableField<RecruitRecord, String> RECRUIT_TITLE = createField("recruit_title", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "招聘标题");

	/**
	 * The column <code>cbis.recruit.fit_major</code>. 适合专业
	 */
	public final TableField<RecruitRecord, String> FIT_MAJOR = createField("fit_major", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "适合专业");

	/**
	 * The column <code>cbis.recruit.tie_id</code>.
	 */
	public final TableField<RecruitRecord, Integer> TIE_ID = createField("tie_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.recruit.username</code>.
	 */
	public final TableField<RecruitRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

	/**
	 * The column <code>cbis.recruit.create_time</code>.
	 */
	public final TableField<RecruitRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>cbis.recruit</code> table reference
	 */
	public Recruit() {
		this("recruit", null);
	}

	/**
	 * Create an aliased <code>cbis.recruit</code> table reference
	 */
	public Recruit(String alias) {
		this(alias, RECRUIT);
	}

	private Recruit(String alias, Table<RecruitRecord> aliased) {
		this(alias, aliased, null);
	}

	private Recruit(String alias, Table<RecruitRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RecruitRecord, Integer> getIdentity() {
		return Keys.IDENTITY_RECRUIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RecruitRecord> getPrimaryKey() {
		return Keys.KEY_RECRUIT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RecruitRecord>> getKeys() {
		return Arrays.<UniqueKey<RecruitRecord>>asList(Keys.KEY_RECRUIT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RecruitRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RecruitRecord, ?>>asList(Keys.RECRUIT_IBFK_1, Keys.RECRUIT_IBFK_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Recruit as(String alias) {
		return new Recruit(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Recruit rename(String name) {
		return new Recruit(name, null);
	}
}
