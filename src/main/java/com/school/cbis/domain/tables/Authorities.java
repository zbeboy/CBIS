/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.AuthoritiesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Authorities extends TableImpl<AuthoritiesRecord> {

	private static final long serialVersionUID = 717058560;

	/**
	 * The reference instance of <code>cbis.authorities</code>
	 */
	public static final Authorities AUTHORITIES = new Authorities();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AuthoritiesRecord> getRecordType() {
		return AuthoritiesRecord.class;
	}

	/**
	 * The column <code>cbis.authorities.username</code>.
	 */
	public final TableField<AuthoritiesRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

	/**
	 * The column <code>cbis.authorities.authority</code>.
	 */
	public final TableField<AuthoritiesRecord, String> AUTHORITY = createField("authority", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * Create a <code>cbis.authorities</code> table reference
	 */
	public Authorities() {
		this("authorities", null);
	}

	/**
	 * Create an aliased <code>cbis.authorities</code> table reference
	 */
	public Authorities(String alias) {
		this(alias, AUTHORITIES);
	}

	private Authorities(String alias, Table<AuthoritiesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Authorities(String alias, Table<AuthoritiesRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AuthoritiesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AuthoritiesRecord, ?>>asList(Keys.AUTHORITIES_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Authorities as(String alias) {
		return new Authorities(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Authorities rename(String name) {
		return new Authorities(name, null);
	}
}
