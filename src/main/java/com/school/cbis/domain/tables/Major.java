/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.MajorRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Major extends TableImpl<MajorRecord> {

	private static final long serialVersionUID = -1866412916;

	/**
	 * The reference instance of <code>cbis.major</code>
	 */
	public static final Major MAJOR = new Major();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MajorRecord> getRecordType() {
		return MajorRecord.class;
	}

	/**
	 * The column <code>cbis.major.id</code>.
	 */
	public final TableField<MajorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.major.tie_id</code>.
	 */
	public final TableField<MajorRecord, Integer> TIE_ID = createField("tie_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.major.major_name</code>.
	 */
	public final TableField<MajorRecord, String> MAJOR_NAME = createField("major_name", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

	/**
	 * The column <code>cbis.major.major_introduce_article_info_id</code>.
	 */
	public final TableField<MajorRecord, Integer> MAJOR_INTRODUCE_ARTICLE_INFO_ID = createField("major_introduce_article_info_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>cbis.major.major_training_goal_article_info_id</code>.
	 */
	public final TableField<MajorRecord, Integer> MAJOR_TRAINING_GOAL_ARTICLE_INFO_ID = createField("major_training_goal_article_info_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>cbis.major.major_trait_article_info_id</code>.
	 */
	public final TableField<MajorRecord, Integer> MAJOR_TRAIT_ARTICLE_INFO_ID = createField("major_trait_article_info_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>cbis.major.major_foregoer_article_info_id</code>.
	 */
	public final TableField<MajorRecord, Integer> MAJOR_FOREGOER_ARTICLE_INFO_ID = createField("major_foregoer_article_info_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>cbis.major.is_show</code>.
	 */
	public final TableField<MajorRecord, Byte> IS_SHOW = createField("is_show", org.jooq.impl.SQLDataType.TINYINT.defaulted(true), this, "");

	/**
	 * Create a <code>cbis.major</code> table reference
	 */
	public Major() {
		this("major", null);
	}

	/**
	 * Create an aliased <code>cbis.major</code> table reference
	 */
	public Major(String alias) {
		this(alias, MAJOR);
	}

	private Major(String alias, Table<MajorRecord> aliased) {
		this(alias, aliased, null);
	}

	private Major(String alias, Table<MajorRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MajorRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MAJOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MajorRecord> getPrimaryKey() {
		return Keys.KEY_MAJOR_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MajorRecord>> getKeys() {
		return Arrays.<UniqueKey<MajorRecord>>asList(Keys.KEY_MAJOR_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MajorRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MajorRecord, ?>>asList(Keys.MAJOR_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Major as(String alias) {
		return new Major(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Major rename(String name) {
		return new Major(name, null);
	}
}
