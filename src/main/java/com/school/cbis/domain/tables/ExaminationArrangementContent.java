/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.ExaminationArrangementContentRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExaminationArrangementContent extends TableImpl<ExaminationArrangementContentRecord> {

	private static final long serialVersionUID = -718580242;

	/**
	 * The reference instance of <code>cbis.examination_arrangement_content</code>
	 */
	public static final ExaminationArrangementContent EXAMINATION_ARRANGEMENT_CONTENT = new ExaminationArrangementContent();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExaminationArrangementContentRecord> getRecordType() {
		return ExaminationArrangementContentRecord.class;
	}

	/**
	 * The column <code>cbis.examination_arrangement_content.id</code>.
	 */
	public final TableField<ExaminationArrangementContentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_content.content</code>.
	 */
	public final TableField<ExaminationArrangementContentRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_content.examination_arrangement_head_id</code>.
	 */
	public final TableField<ExaminationArrangementContentRecord, Integer> EXAMINATION_ARRANGEMENT_HEAD_ID = createField("examination_arrangement_head_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.examination_arrangement_content.teacher_id</code>.
	 */
	public final TableField<ExaminationArrangementContentRecord, Integer> TEACHER_ID = createField("teacher_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>cbis.examination_arrangement_content.content_x</code>.
	 */
	public final TableField<ExaminationArrangementContentRecord, Integer> CONTENT_X = createField("content_x", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>cbis.examination_arrangement_content</code> table reference
	 */
	public ExaminationArrangementContent() {
		this("examination_arrangement_content", null);
	}

	/**
	 * Create an aliased <code>cbis.examination_arrangement_content</code> table reference
	 */
	public ExaminationArrangementContent(String alias) {
		this(alias, EXAMINATION_ARRANGEMENT_CONTENT);
	}

	private ExaminationArrangementContent(String alias, Table<ExaminationArrangementContentRecord> aliased) {
		this(alias, aliased, null);
	}

	private ExaminationArrangementContent(String alias, Table<ExaminationArrangementContentRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ExaminationArrangementContentRecord, Integer> getIdentity() {
		return Keys.IDENTITY_EXAMINATION_ARRANGEMENT_CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ExaminationArrangementContentRecord> getPrimaryKey() {
		return Keys.KEY_EXAMINATION_ARRANGEMENT_CONTENT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ExaminationArrangementContentRecord>> getKeys() {
		return Arrays.<UniqueKey<ExaminationArrangementContentRecord>>asList(Keys.KEY_EXAMINATION_ARRANGEMENT_CONTENT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ExaminationArrangementContentRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ExaminationArrangementContentRecord, ?>>asList(Keys.EXAMINATION_ARRANGEMENT_CONTENT_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExaminationArrangementContent as(String alias) {
		return new ExaminationArrangementContent(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ExaminationArrangementContent rename(String name) {
		return new ExaminationArrangementContent(name, null);
	}
}
