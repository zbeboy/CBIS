/**
 * This class is generated by jOOQ
 */
package com.school.cbis.domain.tables;


import com.school.cbis.domain.Cbis;
import com.school.cbis.domain.Keys;
import com.school.cbis.domain.tables.records.TeacherRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Teacher extends TableImpl<TeacherRecord> {

	private static final long serialVersionUID = 1686987400;

	/**
	 * The reference instance of <code>cbis.teacher</code>
	 */
	public static final Teacher TEACHER = new Teacher();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TeacherRecord> getRecordType() {
		return TeacherRecord.class;
	}

	/**
	 * The column <code>cbis.teacher.id</code>.
	 */
	public final TableField<TeacherRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.teacher.tie_id</code>.
	 */
	public final TableField<TeacherRecord, Integer> TIE_ID = createField("tie_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>cbis.teacher.teacher_job_number</code>.
	 */
	public final TableField<TeacherRecord, String> TEACHER_JOB_NUMBER = createField("teacher_job_number", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

	/**
	 * Create a <code>cbis.teacher</code> table reference
	 */
	public Teacher() {
		this("teacher", null);
	}

	/**
	 * Create an aliased <code>cbis.teacher</code> table reference
	 */
	public Teacher(String alias) {
		this(alias, TEACHER);
	}

	private Teacher(String alias, Table<TeacherRecord> aliased) {
		this(alias, aliased, null);
	}

	private Teacher(String alias, Table<TeacherRecord> aliased, Field<?>[] parameters) {
		super(alias, Cbis.CBIS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TeacherRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TEACHER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TeacherRecord> getPrimaryKey() {
		return Keys.KEY_TEACHER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TeacherRecord>> getKeys() {
		return Arrays.<UniqueKey<TeacherRecord>>asList(Keys.KEY_TEACHER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TeacherRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TeacherRecord, ?>>asList(Keys.TEACHER_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Teacher as(String alias) {
		return new Teacher(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Teacher rename(String name) {
		return new Teacher(name, null);
	}
}
